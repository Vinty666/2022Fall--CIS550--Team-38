{"ast":null,"code":"// import React from 'react';\n// import { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\n//\n//\n// import {\n//     Table,\n//     Pagination,\n//     Row,\n//     Col,\n//     Divider,\n//\n// } from 'antd'\n//\n// import { getMatchSearch, getMatch } from '../fetcher'\n//\n//\n// import MenuBar from '../components/MenuBar';\n//\n// const { Column, ColumnGroup } = Table;\n//\n//\n// class MatchesPage extends React.Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             awayQuery: \"\",\n//             homeQuery: \"\",\n//             matchesResults: [],\n//             selectedMatchId: window.location.search ? window.location.search.substring(1).split('=')[1] : 0,\n//             selectedMatchDetails: null\n//\n//         }\n//\n//         this.handleAwayQueryChange = this.handleAwayQueryChange.bind(this)\n//         this.handleHomeQueryChange = this.handleHomeQueryChange.bind(this)\n//         this.updateSearchResults = this.updateSearchResults.bind(this)\n//         this.goToMatch = this.goToMatch.bind(this)\n//\n//     }\n//\n//\n//\n//     handleAwayQueryChange(event) {\n//         this.setState({ awayQuery: event.target.value })\n//     }\n//\n//     handleHomeQueryChange(event) {\n//         // TASK 10: update state variables appropriately. See handleAwayQueryChange(event) for reference\n//\n//     }\n//     goToMatch(matchId) {\n//         window.location = `/matches?id=${matchId}`\n//     }\n//\n//     updateSearchResults() {\n//         //TASK 11: call getMatchSearch and update matchesResults in state. See componentDidMount() for a hint\n//\n//     }\n//\n//     componentDidMount() {\n//         // getMatchSearch(this.state.homeQuery, this.state.awayQuery, null, null).then(res => {\n//         //     this.setState({ matchesResults: res.results })\n//         // })\n//         //\n//         // getMatch(this.state.selectedMatchId).then(res => {\n//         //     this.setState({ selectedMatchDetails: res.results[0] })\n//         // })\n//\n//\n//\n//\n//     }\n//\n//     render() {\n//         return (\n//             <div>\n//                 <MenuBar />\n//                 <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n//                     <Row>\n//                         <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n//                             <label>Home Team</label>\n//                             <FormInput placeholder=\"Home Team\" value={this.state.homeQuery} onChange={this.handleHomeQueryChange} />\n//                         </FormGroup></Col>\n//                         <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n//                             <label>Away Team</label>\n//                             <FormInput placeholder=\"Away Team\" value={this.state.awayQuery} onChange={this.handleAwayQueryChange} />\n//                         </FormGroup></Col>\n//                         <Col flex={2}><FormGroup style={{ width: '10vw' }}>\n//                             <Button style={{ marginTop: '4vh' }} onClick={this.updateSearchResults}>Search</Button>\n//                         </FormGroup></Col>\n//\n//                     </Row>\n//\n//\n//                 </Form>\n//                 <Divider />\n//                 {/* TASK 12: Copy over your implementation of the matches table from the home page */}\n//\n//                 <Divider />\n//                 {this.state.selectedMatchDetails ? <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n//                     <Card>\n//                         <CardBody>\n//\n//                             <Row gutter='30' align='middle' justify='center'>\n//                                 <Col flex={2} style={{ textAlign: 'left' }}>\n//                                     <CardTitle>{this.state.selectedMatchDetails.Home}</CardTitle>\n//\n//                                 </Col>\n//                                 <Col flex={2} style={{ textAlign: 'center' }}>\n//                                     {this.state.selectedMatchDetails.Date} at {this.state.selectedMatchDetails.Time}\n//                                 </Col>\n//                                 {/* TASK 13: Add a column with flex = 2, and text alignment = right to display the name of the away team - similar to column 1 in this row */}\n//                                 <Col flex={2} style={{ textAlign: 'right' }}>\n//                                     <CardTitle>{this.state.selectedMatchDetails.Away}</CardTitle>\n//                                 </Col>\n//\n//                             </Row>\n//                             <Row gutter='30' align='middle' justify='center'>\n//                                 <Col span={9} style={{ textAlign: 'left' }}>\n//                                     <h3>{this.state.selectedMatchDetails.HomeGoals}</h3>\n//                                 </Col >\n//                                 <Col span={6} style={{ textAlign: 'center' }}>\n//                                     Goals\n//                                 </Col >\n//                                 {/* TASK 14: Add a column with span = 9, and text alignment = right to display the # of goals the away team scored - similar 1 in this row */}\n//\n//                                 <Col span={9} style={{ textAlign: 'right' }}>\n//                                     <h3>{this.state.selectedMatchDetails.AwayGoals}</h3>\n//                                 </Col>\n//                             </Row>\n//                             {/* TASK 15: create a row for goals at half time similar to the row for 'Goals' above, but use h5 in place of h3!  */}\n//                             <Row gutter='30' align='middle' justify='center'>\n//                                 <Col span={9} style={{ textAlign: 'left' }}>\n//                                 <Progress value={this.state.selectedMatchDetails.ShotsOnTargetHome * 100 / this.state.selectedMatchDetails.ShotsHome}>{this.state.selectedMatchDetails.ShotsOnTargetHome} / {this.state.selectedMatchDetails.ShotsHome}</Progress>\n//                                 </Col >\n//                                 <Col span={6} style={{ textAlign: 'center' }}>\n//                                     Shot Accuracy\n//                                 </Col >\n//                                 <Col span={9} style={{ textAlign: 'right' }}>\n//                                     {/* TASK 18: add a progress bar to display the shot accuracy for the away team -  look at the progress bar in column 1 of this row for reference*/}\n//                                 </Col>\n//                             </Row>\n//                             <Row gutter='30' align='middle' justify='center'>\n//                                 <Col span={9} style={{ textAlign: 'left' }}>\n//                                     <h5>{this.state.selectedMatchDetails.CornersHome}</h5>\n//                                 </Col >\n//                                 <Col span={6} style={{ textAlign: 'center' }}>\n//                                     Corners\n//                                 </Col >\n//                                 <Col span={9} style={{ textAlign: 'right' }}>\n//                                     <h5>{this.state.selectedMatchDetails.CornersAway}</h5>\n//                                 </Col>\n//                             </Row>\n//                             {/* TASK 16: add a row for fouls cards - check out the above lines for how we did it for corners */}\n//                             <Row gutter='30' align='middle' justify='center'>\n//                                 <Col span={9} style={{ textAlign: 'left' }}>\n//                                     <h5>{this.state.selectedMatchDetails.RCHome}</h5>\n//                                 </Col >\n//                                 <Col span={6} style={{ textAlign: 'center' }}>\n//                                     Red Cards\n//                                 </Col >\n//                                 <Col span={9} style={{ textAlign: 'right' }}>\n//                                     <h5>{this.state.selectedMatchDetails.RCAway}</h5>\n//                                 </Col>\n//                             </Row>\n//                             {/* TASK 17: add a row for yellow cards - check out the above lines for how we did it for red cards */}\n//\n//\n//                         </CardBody>\n//                     </Card>\n//\n//                 </div> : null}\n//                 <Divider />\n//\n//             </div>\n//         )\n//     }\n// }\n//\n// export default MatchesPage\n//","map":{"version":3,"sources":["D:/CIS550/2022Fall--CIS550--Team-38/client/src/pages/MatchesPage.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\r\n// import { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\r\n//\r\n//\r\n// import {\r\n//     Table,\r\n//     Pagination,\r\n//     Row,\r\n//     Col,\r\n//     Divider,\r\n//\r\n// } from 'antd'\r\n//\r\n// import { getMatchSearch, getMatch } from '../fetcher'\r\n//\r\n//\r\n// import MenuBar from '../components/MenuBar';\r\n//\r\n// const { Column, ColumnGroup } = Table;\r\n//\r\n//\r\n// class MatchesPage extends React.Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.state = {\r\n//             awayQuery: \"\",\r\n//             homeQuery: \"\",\r\n//             matchesResults: [],\r\n//             selectedMatchId: window.location.search ? window.location.search.substring(1).split('=')[1] : 0,\r\n//             selectedMatchDetails: null\r\n//\r\n//         }\r\n//\r\n//         this.handleAwayQueryChange = this.handleAwayQueryChange.bind(this)\r\n//         this.handleHomeQueryChange = this.handleHomeQueryChange.bind(this)\r\n//         this.updateSearchResults = this.updateSearchResults.bind(this)\r\n//         this.goToMatch = this.goToMatch.bind(this)\r\n//\r\n//     }\r\n//\r\n//\r\n//\r\n//     handleAwayQueryChange(event) {\r\n//         this.setState({ awayQuery: event.target.value })\r\n//     }\r\n//\r\n//     handleHomeQueryChange(event) {\r\n//         // TASK 10: update state variables appropriately. See handleAwayQueryChange(event) for reference\r\n//\r\n//     }\r\n//     goToMatch(matchId) {\r\n//         window.location = `/matches?id=${matchId}`\r\n//     }\r\n//\r\n//     updateSearchResults() {\r\n//         //TASK 11: call getMatchSearch and update matchesResults in state. See componentDidMount() for a hint\r\n//\r\n//     }\r\n//\r\n//     componentDidMount() {\r\n//         // getMatchSearch(this.state.homeQuery, this.state.awayQuery, null, null).then(res => {\r\n//         //     this.setState({ matchesResults: res.results })\r\n//         // })\r\n//         //\r\n//         // getMatch(this.state.selectedMatchId).then(res => {\r\n//         //     this.setState({ selectedMatchDetails: res.results[0] })\r\n//         // })\r\n//\r\n//\r\n//\r\n//\r\n//     }\r\n//\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <MenuBar />\r\n//                 <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\r\n//                     <Row>\r\n//                         <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n//                             <label>Home Team</label>\r\n//                             <FormInput placeholder=\"Home Team\" value={this.state.homeQuery} onChange={this.handleHomeQueryChange} />\r\n//                         </FormGroup></Col>\r\n//                         <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n//                             <label>Away Team</label>\r\n//                             <FormInput placeholder=\"Away Team\" value={this.state.awayQuery} onChange={this.handleAwayQueryChange} />\r\n//                         </FormGroup></Col>\r\n//                         <Col flex={2}><FormGroup style={{ width: '10vw' }}>\r\n//                             <Button style={{ marginTop: '4vh' }} onClick={this.updateSearchResults}>Search</Button>\r\n//                         </FormGroup></Col>\r\n//\r\n//                     </Row>\r\n//\r\n//\r\n//                 </Form>\r\n//                 <Divider />\r\n//                 {/* TASK 12: Copy over your implementation of the matches table from the home page */}\r\n//\r\n//                 <Divider />\r\n//                 {this.state.selectedMatchDetails ? <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\r\n//                     <Card>\r\n//                         <CardBody>\r\n//\r\n//                             <Row gutter='30' align='middle' justify='center'>\r\n//                                 <Col flex={2} style={{ textAlign: 'left' }}>\r\n//                                     <CardTitle>{this.state.selectedMatchDetails.Home}</CardTitle>\r\n//\r\n//                                 </Col>\r\n//                                 <Col flex={2} style={{ textAlign: 'center' }}>\r\n//                                     {this.state.selectedMatchDetails.Date} at {this.state.selectedMatchDetails.Time}\r\n//                                 </Col>\r\n//                                 {/* TASK 13: Add a column with flex = 2, and text alignment = right to display the name of the away team - similar to column 1 in this row */}\r\n//                                 <Col flex={2} style={{ textAlign: 'right' }}>\r\n//                                     <CardTitle>{this.state.selectedMatchDetails.Away}</CardTitle>\r\n//                                 </Col>\r\n//\r\n//                             </Row>\r\n//                             <Row gutter='30' align='middle' justify='center'>\r\n//                                 <Col span={9} style={{ textAlign: 'left' }}>\r\n//                                     <h3>{this.state.selectedMatchDetails.HomeGoals}</h3>\r\n//                                 </Col >\r\n//                                 <Col span={6} style={{ textAlign: 'center' }}>\r\n//                                     Goals\r\n//                                 </Col >\r\n//                                 {/* TASK 14: Add a column with span = 9, and text alignment = right to display the # of goals the away team scored - similar 1 in this row */}\r\n//\r\n//                                 <Col span={9} style={{ textAlign: 'right' }}>\r\n//                                     <h3>{this.state.selectedMatchDetails.AwayGoals}</h3>\r\n//                                 </Col>\r\n//                             </Row>\r\n//                             {/* TASK 15: create a row for goals at half time similar to the row for 'Goals' above, but use h5 in place of h3!  */}\r\n//                             <Row gutter='30' align='middle' justify='center'>\r\n//                                 <Col span={9} style={{ textAlign: 'left' }}>\r\n//                                 <Progress value={this.state.selectedMatchDetails.ShotsOnTargetHome * 100 / this.state.selectedMatchDetails.ShotsHome}>{this.state.selectedMatchDetails.ShotsOnTargetHome} / {this.state.selectedMatchDetails.ShotsHome}</Progress>\r\n//                                 </Col >\r\n//                                 <Col span={6} style={{ textAlign: 'center' }}>\r\n//                                     Shot Accuracy\r\n//                                 </Col >\r\n//                                 <Col span={9} style={{ textAlign: 'right' }}>\r\n//                                     {/* TASK 18: add a progress bar to display the shot accuracy for the away team -  look at the progress bar in column 1 of this row for reference*/}\r\n//                                 </Col>\r\n//                             </Row>\r\n//                             <Row gutter='30' align='middle' justify='center'>\r\n//                                 <Col span={9} style={{ textAlign: 'left' }}>\r\n//                                     <h5>{this.state.selectedMatchDetails.CornersHome}</h5>\r\n//                                 </Col >\r\n//                                 <Col span={6} style={{ textAlign: 'center' }}>\r\n//                                     Corners\r\n//                                 </Col >\r\n//                                 <Col span={9} style={{ textAlign: 'right' }}>\r\n//                                     <h5>{this.state.selectedMatchDetails.CornersAway}</h5>\r\n//                                 </Col>\r\n//                             </Row>\r\n//                             {/* TASK 16: add a row for fouls cards - check out the above lines for how we did it for corners */}\r\n//                             <Row gutter='30' align='middle' justify='center'>\r\n//                                 <Col span={9} style={{ textAlign: 'left' }}>\r\n//                                     <h5>{this.state.selectedMatchDetails.RCHome}</h5>\r\n//                                 </Col >\r\n//                                 <Col span={6} style={{ textAlign: 'center' }}>\r\n//                                     Red Cards\r\n//                                 </Col >\r\n//                                 <Col span={9} style={{ textAlign: 'right' }}>\r\n//                                     <h5>{this.state.selectedMatchDetails.RCAway}</h5>\r\n//                                 </Col>\r\n//                             </Row>\r\n//                             {/* TASK 17: add a row for yellow cards - check out the above lines for how we did it for red cards */}\r\n//\r\n//\r\n//                         </CardBody>\r\n//                     </Card>\r\n//\r\n//                 </div> : null}\r\n//                 <Divider />\r\n//\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n//\r\n// export default MatchesPage\r\n//\r\n"]},"metadata":{},"sourceType":"module"}